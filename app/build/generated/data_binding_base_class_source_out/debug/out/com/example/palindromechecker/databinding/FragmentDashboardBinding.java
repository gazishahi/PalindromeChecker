// Generated by view binder compiler. Do not edit!
package com.example.palindromechecker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.palindromechecker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView answer;

  @NonNull
  public final EditText enterWord;

  @NonNull
  public final Button guessButton;

  @NonNull
  public final Button nextButton;

  @NonNull
  public final TextView someLetters;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView wordLength;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView, @NonNull TextView answer,
      @NonNull EditText enterWord, @NonNull Button guessButton, @NonNull Button nextButton,
      @NonNull TextView someLetters, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull TextView wordLength) {
    this.rootView = rootView;
    this.answer = answer;
    this.enterWord = enterWord;
    this.guessButton = guessButton;
    this.nextButton = nextButton;
    this.someLetters = someLetters;
    this.textView = textView;
    this.textView2 = textView2;
    this.wordLength = wordLength;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer;
      TextView answer = ViewBindings.findChildViewById(rootView, id);
      if (answer == null) {
        break missingId;
      }

      id = R.id.enterWord;
      EditText enterWord = ViewBindings.findChildViewById(rootView, id);
      if (enterWord == null) {
        break missingId;
      }

      id = R.id.guessButton;
      Button guessButton = ViewBindings.findChildViewById(rootView, id);
      if (guessButton == null) {
        break missingId;
      }

      id = R.id.nextButton;
      Button nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.someLetters;
      TextView someLetters = ViewBindings.findChildViewById(rootView, id);
      if (someLetters == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.wordLength;
      TextView wordLength = ViewBindings.findChildViewById(rootView, id);
      if (wordLength == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, answer, enterWord,
          guessButton, nextButton, someLetters, textView, textView2, wordLength);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
